테이블 작성 시 
	primary key : 테이블의 대표
	foreign key : 다른 테이블과 연결

DDL : DML(Data Manipulation Language)은 말 그대로 데이터를 조작하는 명령어입니다.
SELECT 문도 DML에 속하며 데이터를 조작하기는 하지만 단지 조회하여 출력할 뿐이었습니다.
앞으로 익힐 INSERT, UPDATE, DELETE는 데이터를 직접 삽입, 갱신, 삭제하는 명령어입니다.
데이터를 조작하여 저장하는 일련의 과정을 트랜잭션(transaction)이라고 합니다.
DML은 트랜잭션을 다루는 명령어입니다.
DML 명령어는 SELECT 문과 마찬가지로 테이블의 행을 기준으로 삽입, 갱신, 삭제합니다.

INSERT

테이블에 새로운 행을 삽입한다.

UPDATE

테이블에 있는 행의 내용을 갱신한다.

DELETE

테이블의 행을 삭제한다.


DML : 테이블과 관련 열을 생성하고 변경하고 삭제하는 명령어를 데이터 정의어(DDL, Data Definition Language)라고 합니다.
DDL 명령어는 따로 커밋하지 않아도 데이터베이스에 즉각 반영되며 데이터 사전(data dictionary)에 기록됩니다.
신규로 테이블을 생성하는 CREATE TABLE 명령어를 제외한 나머지 DDL 명령어는
데이터베이스에 이미 정의된 테이블을 수정하거나 삭제하기 때문에 제약 조건에 의해 적용이 어려울 수 있습니다.
제약 조건까지 조작하려면 데이터베이스의 전체적인 설계 요소를 확인해야 합니다.
DDL 명령어로 제약 조건을 관리할 수도 있지만,
이 책의 지향점이 데이터베이스의 설계 및 관리가 아니므로
데이터 분석과 조작을 위한 기본적인 사용 방법을 위주로 설명하겠습니다.

update 구문

show databases;
show tables;
select * from tables;
select name from tables;

트랜잭션을 정상적으로 완료하기 위한 명령어
commit;


professor 테이블
id(PK),name,tel

lee, leesuyoung, 221
yoon, yoonjongshin, 222

CREATE TABLE `professor` (
	`id` VARCHAR(50) NOT NULL DEFAULT '' COLLATE 'utf8mb4_0900_ai_ci',
	`name` VARCHAR(50) NULL DEFAULT NULL COLLATE 'utf8mb4_0900_ai_ci',
	`tel` VARCHAR(50) NULL DEFAULT NULL COLLATE 'utf8mb4_0900_ai_ci',
	PRIMARY KEY (`id`) USING BTREE
)
COLLATE='utf8mb4_0900_ai_ci'
ENGINE=INNODB

INSERT INTO `test`.`professor` (`id`, `name`, `tel`) VALUES ('lee', 'leesuyoung', '221');
INSERT INTO `test`.`professor` (`id`, `name`, `tel`) VALUES ('yoon', 'yoonjongshin', '222');

subject 테이블
sid, proid(fk), subid(fk)

c100, yoon,s100
c200,lee,s200


학원관리 DB를 구축하려고 한다.
요구사항을 분석하여 테이블을 생성하고 데이터를 넣어 무결성을 검증하시오
1.필요한 테이블의 필드와 속성을 정의하시오
2.예시 학생 테이블
            직원 테이블
            

            id 이름 나이 성별
            id 가 pk, 책 이름 수량은 NULL 허용 안함
3.구현 

PRIMARY KEY 기본키, 식별자 역할, 기본키 중복 값을 허용하지 않는다. null값도 가질 수 없다.
(주민등록번호)
FOREIGN KEY 외래키, 테이블 간에 서로 연결 관계를 정의하는 키
UNIQUE KEY 고유키 행에서 유일한 값을 갖는 데이터 값으로 구성된 열이다.
중복 값이 없는 유일한 값을 갖지만 PRIMARY키가 아닌 데이터 값이 존재한다.